
JSON POST REQUEST TO SERVER

            POST body:
              {
                "contexts": [
                  "shop"
                ],
                "lang": "en",
                "query": "I need apples",           //Message object goes here
                "sessionId": "12345",
                "timezone": "America/New_York"
              }

JSON GET OBJECT FORMAT FROM SERVER
            {
              "id": "3622be70-cb49-4796-a4fa-71f16f7b5600",
              "lang": "en",
              "result": {
                "action": "pickFruit",
                "actionIncomplete": false,
                "contexts": [
                  "shop"
                ],
                "fulfillment": {
                  "messages": [
                    {
                      "platform": "google",
                      "textToSpeech": "Okay how many apples?",
                      "type": "simple_response"
                    },
                    {
                      "platform": "google",
                      "textToSpeech": "Okay. How many apples?",
                      "type": "simple_response"
                    },
                    {
                      "speech": "Okay how many apples?",    //message2 set from here
                      "type": 0
                    }
                  ],
                  "source": "dialogflow.test.com",
                  "speech": "Okay how many apples?"
                },
                "metadata": {
                  "intentId": "21478be9-bea6-449b-bcca-c5f009c0a5a1",
                  "intentName": "add-to-list",
                  "webhookForSlotFillingUsed": "false",
                  "webhookUsed": "false"
                },
                "parameters": {
                  "fruit": [
                    "apples"
                  ]
                },
                "resolvedQuery": "I need apples",
                "score": 1,
                "source": "agent"
              },
              "sessionId": "12345",
              "status": {
                "code": 200,
                "errorType": "success"
              },
              "timestamp": "2017-09-19T21:16:44.832Z"
            }


            public String getText(String query) throws UnsupportedEncodingException
                {
                    String message_server = null;
                    String text = null;
                    BufferedReader bufferedReader = null;

                    try {

                        URL url = new URL("https://api.api.ai/v1/query?v=20150910");

                        URLConnection connection = url.openConnection();
                        connection.setRequestProperty("Authorization","Bearer 1348d95ad6aa4e119cec25a7973ba09f");
                        connection.setRequestProperty("Content-Type","application/json");

                        JSONArray jsonArray = new JSONArray(message.getTextmessage());
                        JSONObject jsonParam = new JSONObject();
                        jsonArray.put(query);
                        jsonParam.put("query",jsonArray);
                        jsonParam.put("lang","en");
                        jsonParam.put("Session id","1234567890");

                        OutputStreamWriter wr = new OutputStreamWriter(connection.getOutputStream());
                        Log.d("Query","after converesion is" + jsonParam.toString());
                        wr.write(jsonParam.toString());
                        wr.flush();
                        Log.d("Query","Json is" + jsonParam);


                        bufferedReader = new BufferedReader(new InputStreamReader(connection.getInputStream()));
                        StringBuilder Sb = new StringBuilder();
                        String line =  null;

                        text = Sb.toString();



                        do{

                            Sb.append(line + "\n");

                        }while( (line = bufferedReader.readLine()) != null );

                        JSONObject server_object = new JSONObject(text);
                        JSONObject serverobject = server_object.getJSONObject("result");
                        JSONObject fulfillment = null;
                        if(serverobject.has("fulfillment")) {
                            fulfillment = serverobject.getJSONObject("fulfillment");

                            if(fulfillment.has("speech")){

                                message_server = fulfillment.optString("speech");

                            }

                        }


                        return message_server;
                    }
                    catch (MalformedURLException e) {
                        e.printStackTrace();
                    } catch (IOException e) {
                        e.printStackTrace();
                    } catch (JSONException e) {
                        e.printStackTrace();
                    }

                    return null;
                }

                class RetrieveFeedTask extends AsyncTask<String, Void, String> {
                    String s = "Hi";
                    protected String doInBackground(String... urls) {
                        try {
                            s = getText(urls[0]);
                            Log.d("schavishay","ikde kay hotay?");
                        } catch (Exception e) {

                        }
                        return  s;
                    }

                    protected void onPostExecute(String s2) {
                        super.onPostExecute(s);
                        ResponseMessage message2 = null;
                        message2 = new ResponseMessage(s,false);

                        responseMessageList.add(message2);
                        messageAdapter.notifyDataSetChanged();
                    }

                }



                 ___________________________________________

                public String getText(String query) throws UnsupportedEncodingException
                    {
                        String message_server = null;
                        String text = null;
                        BufferedReader bufferedReader = null;

                        try {

                            URL url = new URL("https://api.api.ai/v1/query?v=20150910");

                            URLConnection connection = url.openConnection();
                            connection.setRequestProperty("Authorization","Bearer 1348d95ad6aa4e119cec25a7973ba09f");
                            connection.setRequestProperty("Content-Type","application/json");

                            JSONArray jsonArray = new JSONArray(message.getTextmessage());
                            JSONObject jsonParam = new JSONObject();
                            jsonArray.put(query);
                            jsonParam.put("query",jsonArray);
                            jsonParam.put("lang","en");
                            jsonParam.put("Session id","1234567890");

                            OutputStreamWriter wr = new OutputStreamWriter(connection.getOutputStream());
                            Log.d("Query","after converesion is" + jsonParam.toString());
                            wr.write(jsonParam.toString());
                            wr.flush();
                            Log.d("Query","Json is" + jsonParam);


                            bufferedReader = new BufferedReader(new InputStreamReader(connection.getInputStream()));
                            StringBuilder Sb = new StringBuilder();
                            String line =  null;

                            text = Sb.toString();



                            do{

                                Sb.append(line + "\n");

                            }while( (line = bufferedReader.readLine()) != null );

                            JSONObject server_object = new JSONObject(text);
                            JSONObject serverobject = server_object.getJSONObject("result");
                            JSONObject fulfillment = null;
                            if(serverobject.has("fulfillment")) {
                                fulfillment = serverobject.getJSONObject("fulfillment");

                                if(fulfillment.has("speech")){

                                    message_server = fulfillment.optString("speech");

                                }

                            }


                            return message_server;
                        }
                        catch (MalformedURLException e) {
                            e.printStackTrace();
                        } catch (IOException e) {
                            e.printStackTrace();
                        } catch (JSONException e) {
                            e.printStackTrace();
                        }

                        return null;
                    }

                    class RetrieveFeedTask extends AsyncTask<String, Void, String> {
                        String s = "Hi";
                        protected String doInBackground(String... urls) {
                            try {
                                s = getText(urls[0]);
                                Log.d("schavishay","ikde kay hotay?");
                            } catch (Exception e) {

                            }
                            return  s;
                        }

                        protected void onPostExecute(String s2) {
                            super.onPostExecute(s);
                            ResponseMessage message2 = null;
                            message2 = new ResponseMessage(s,false);

                            responseMessageList.add(message2);
                            messageAdapter.notifyDataSetChanged();
                        }

                    }



                    FOOD_ID QUANTITY

                    Quantity from query

                    eg: 2 burgers
                    quant = 2
                    burger

                    ch bur veg bur
                    which one?

                    onclick
                    set_FOOD_ID= selected.


